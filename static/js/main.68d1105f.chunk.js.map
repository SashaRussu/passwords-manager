{"version":3,"sources":["serviceWorker.js","constants/propTypes.js","routes/HomeDashboard.js","constants/routes.js","containers/ErrorBoundary.js","containers/Layout.js","components/Input.js","utils/createJoiValidator.js","containers/PasswordCreateEditForm.js","redux/initialState.js","redux/modules/passwords.js","redux/modules/index.js","routes/CreatePassword.js","routes/EditPassword.js","routes/Settings.js","routes/NoMatch.js","redux/reducers.js","redux/store.js","App.js","utils/index.js","index.js"],"names":["Boolean","window","location","hostname","match","children","PropTypes","oneOfType","element","isRequired","arrayOf","useStyles","shape","pathname","string","isExact","bool","params","object","url","push","func","value","any","title","number","instanceOf","Date","makeStyles","theme","paper","padding","spacing","textAlign","color","palette","text","secondary","button","width","HomeDashboard","passwords","classes","console","log","Grid","container","direction","justify","alignItems","to","Button","variant","map","passwordId","id","site","userName","password","key","item","xs","Paper","className","populateURLParams","defaultProps","connect","items","Container","styled","div","ErrorBoundary","props","state","error","this","setState","href","type","Component","ContainerStyled","Layout","maxWidth","TextFieldStyled","TextField","Input","input","meta","label","isInvalid","touched","margin","InputProps","validationSchema","Joi","keys","max","required","PasswordCreateEditForm","caption","goBack","isDeleteButtonShown","handleDelete","handleSubmit","reset","onClick","Field","name","component","reduxForm","schema","validate","values","result","abortEarly","details","reduce","all","cur","allErrors","path","length","message","Object","prototype","hasOwnProperty","call","current","CREATE_PASSWORD","UPDATE_PASSWORD","REMOVE_PASSWORD","createPassword","createAction","updatePassword","removePassword","handleActions","payload","uuidv1","passwordData","updateById","filterById","initialState","passwordsReducer","passwordsModule","history","form","onSubmit","EditPassword","currentPasswordItem","initialValues","findById","Settings","NoMatch","formReducer","reducers","configureStore","reducer","rootReducer","devTools","process","preloadedState","enhancers","persistState","App","store","basename","exact","CreatePassword","Array","data","find","filter","String","newString","entries","forEach","replace","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.68d1105f.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\n/* eslint-disable */\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n)\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config)\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          )\r\n        })\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config)\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing\r\n        if (installingWorker == null) {\r\n          return\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              )\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration)\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.')\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration)\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error)\r\n    })\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type')\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload()\r\n          })\r\n        })\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config)\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      )\r\n    })\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister()\r\n    })\r\n  }\r\n}\r\n","import PropTypes from 'prop-types'\r\n\r\nconst children = PropTypes.oneOfType([\r\n  PropTypes.element.isRequired,\r\n  PropTypes.arrayOf(PropTypes.element.isRequired).isRequired,\r\n])\r\n\r\nexport default {\r\n  children: PropTypes.oneOfType([\r\n    PropTypes.element.isRequired,\r\n    PropTypes.arrayOf(children).isRequired,\r\n  ]),\r\n  location: PropTypes.shape({\r\n    pathname: PropTypes.string.isRequired,\r\n  }),\r\n  match: PropTypes.shape({\r\n    isExact: PropTypes.bool,\r\n    params: PropTypes.object.isRequired,\r\n    url: PropTypes.string.isRequired,\r\n  }),\r\n  history: PropTypes.shape({\r\n    push: PropTypes.func.isRequired,\r\n  }),\r\n  options: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      value: PropTypes.any.isRequired,\r\n      title: PropTypes.string,\r\n    }).isRequired\r\n  ),\r\n  id: PropTypes.oneOfType([\r\n    PropTypes.string.isRequired,\r\n    PropTypes.number.isRequired,\r\n  ]),\r\n  className: PropTypes.string,\r\n  arrayOfObjects: PropTypes.arrayOf(PropTypes.object.isRequired),\r\n  arrayOfNumbers: PropTypes.arrayOf(PropTypes.number.isRequired),\r\n  func: PropTypes.func,\r\n  arrayOf: PropTypes.arrayOf,\r\n  any: PropTypes.any,\r\n  string: PropTypes.string,\r\n  bool: PropTypes.bool,\r\n  shape: PropTypes.shape,\r\n  date: PropTypes.instanceOf(Date),\r\n  number: PropTypes.number,\r\n  stringOrNumber: PropTypes.oneOfType([\r\n    PropTypes.string.isRequired,\r\n    PropTypes.number.isRequired,\r\n  ]),\r\n}\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport { Grid, Paper, Button } from '@material-ui/core'\r\nimport { CREATE_PASSWORD_ROUTE, EDIT_PASSWORD_ROUTE } from '../constants/routes'\r\nimport PROP_TYPES from '../constants/propTypes'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  paper: {\r\n    padding: theme.spacing(1),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  button: {\r\n    width: '100%',\r\n  },\r\n}))\r\n// TODO: add search\r\nconst HomeDashboard = ({ passwords }) => {\r\n  const classes = useStyles()\r\n  console.log(1)\r\n  \nreturn (\r\n    <>\r\n      <Grid\r\n        container\r\n        direction=\"row\"\r\n        justify=\"space-between\"\r\n        alignItems=\"center\"\r\n      >\r\n        <h2>Passwords</h2>\r\n        <Link to={CREATE_PASSWORD_ROUTE}>\r\n          <Button variant=\"outlined\">Add new</Button>\r\n        </Link>\r\n      </Grid>\r\n      <br />\r\n      <Grid container spacing={3}>\r\n        {passwords.map(({ id: passwordId, site, userName, password }) => (\r\n          <Grid key={passwordId} container item xs={12} spacing={1}>\r\n            <Grid item xs={3}>\r\n              <Paper className={classes.paper}>{site}</Paper>\r\n            </Grid>\r\n            <Grid item xs={3}>\r\n              <Paper className={classes.paper}>{userName}</Paper>\r\n            </Grid>\r\n            <Grid item xs={3}>\r\n              <Paper className={classes.paper}>{password}</Paper>\r\n            </Grid>\r\n            <Grid item xs={3}>\r\n              <Link to={EDIT_PASSWORD_ROUTE.populateURLParams({ passwordId })}>\r\n                <Button className={classes.button} variant=\"outlined\">\r\n                  Edit\r\n                </Button>\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        ))}\r\n      </Grid>\r\n    </>\r\n  )\r\n}\r\n\r\nHomeDashboard.defaultProps = {\r\n  passwords: [],\r\n}\r\n\r\nHomeDashboard.propTypes = {\r\n  passwords: PROP_TYPES.arrayOfObjects,\r\n}\r\n\r\nexport default connect(({ passwords: { items: passwords } }) => ({\r\n  passwords,\r\n}))(HomeDashboard)\r\n","export const HOME_DASHBOARD_ROUTE = '/'\r\nexport const CREATE_PASSWORD_ROUTE = '/create'\r\nexport const EDIT_PASSWORD_ROUTE = '/:passwordId/edit'\r\nexport const SETTINGS_ROUTE = '/settings'\r\n","import React, { Component } from 'react'\r\nimport styled from 'styled-components'\r\nimport PROP_TYPES from '../constants/propTypes'\r\n\r\nconst Container = styled.div`\r\n  margin: 0 auto;\r\n  padding: 100px;\r\n  font-size: 32px;\r\n  width: 600px;\r\n`\r\n\r\nclass ErrorBoundary extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.state = { error: null }\r\n  }\r\n\r\n  componentDidCatch(error) {\r\n    this.setState({\r\n      error,\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { error } = this.state\r\n    const { children } = this.props\r\n\r\n    if (error) {\r\n      return (\r\n        <Container>\r\n          <h2>Something went wrong</h2>\r\n          <a href=\"/\">\r\n            <button type=\"button\">Go to main page</button>\r\n          </a>\r\n        </Container>\r\n      )\r\n    }\r\n\r\n    return children\r\n  }\r\n}\r\n\r\nErrorBoundary.propTypes = {\r\n  children: PROP_TYPES.children.isRequired,\r\n}\r\n\r\nexport default ErrorBoundary\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Container } from '@material-ui/core'\r\nimport PROP_TYPES from '../constants/propTypes'\r\n\r\nconst ContainerStyled = styled(Container)`\r\n  padding-top: 50px;\r\n`\r\n\r\nconst Layout = ({ children }) => (\r\n  <ContainerStyled maxWidth=\"sm\">{children}</ContainerStyled>\r\n)\r\n\r\nLayout.propTypes = {\r\n  children: PROP_TYPES.children.isRequired,\r\n}\r\n\r\nexport default Layout\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport styled from 'styled-components'\r\nimport TextField from '@material-ui/core/TextField'\r\n\r\nconst TextFieldStyled = styled(TextField)`\r\n  width: 100%;\r\n`\r\n\r\nconst Input = ({ input, type = 'text', meta = {}, label }) => {\r\n  const isInvalid = meta.touched && meta.error\r\n\r\n  return (\r\n    <TextFieldStyled\r\n      error={!!isInvalid}\r\n      label={label}\r\n      margin=\"normal\"\r\n      type={type}\r\n      InputProps={{\r\n        ...input,\r\n      }}\r\n    />\r\n  )\r\n}\r\n\r\nInput.defaultProps = {\r\n  type: 'text',\r\n  meta: {},\r\n  label: '',\r\n}\r\n\r\nInput.propTypes = {\r\n  input: PropTypes.shape().isRequired,\r\n  type: PropTypes.string,\r\n  meta: PropTypes.shape(),\r\n  label: PropTypes.string,\r\n}\r\n\r\nexport default Input\r\n","import Joi from 'joi'\r\n\r\nexport default schema => values => {\r\n  const result = Joi.validate(values, schema, { abortEarly: false })\r\n  if (result.error === null) {\r\n    return {}\r\n  }\r\n\r\n  return result.error.details.reduce((all, cur) => {\r\n    const allErrors = { ...all }\r\n    const path = cur.path[cur.path.length - 1]\r\n    const { message } = cur\r\n\r\n    if (Object.prototype.hasOwnProperty.call(allErrors, path)) {\r\n      allErrors[path] += message\r\n    } else {\r\n      allErrors[path] = message\r\n    }\r\n\r\n    return allErrors\r\n  }, {})\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Joi from 'joi'\r\nimport { reduxForm, Field } from 'redux-form'\r\nimport { Container, Grid, Button } from '@material-ui/core'\r\nimport Input from '../components/Input'\r\nimport createJoiValidator from '../utils/createJoiValidator'\r\nimport PROP_TYPES from '../constants/propTypes'\r\n\r\nconst validationSchema = Joi.object().keys({\r\n  site: Joi.string()\r\n    .max(255)\r\n    .required(),\r\n  userName: Joi.string()\r\n    .max(255)\r\n    .required(),\r\n  password: Joi.string()\r\n    .max(255)\r\n    .required(),\r\n})\r\n\r\nconst PasswordCreateEditForm = ({\r\n  caption,\r\n  goBack,\r\n  isDeleteButtonShown,\r\n  handleDelete,\r\n  handleSubmit,\r\n  reset,\r\n}) => (\r\n  <Container maxWidth=\"sm\">\r\n    <Button variant=\"outlined\" onClick={goBack}>\r\n      go back\r\n    </Button>\r\n    <br />\r\n    <br />\r\n    {caption}\r\n    <form>\r\n      <Grid\r\n        container\r\n        direction=\"column\"\r\n        justify=\"flex-start\"\r\n        alignItems=\"center\"\r\n      >\r\n        <Field name=\"site\" label=\"Site\" component={Input} />\r\n        <Field name=\"userName\" label=\"User name\" component={Input} />\r\n        <Field name=\"password\" label=\"Password\" component={Input} />\r\n        <br />\r\n        <Grid\r\n          container\r\n          direction=\"row\"\r\n          justify=\"space-between\"\r\n          alignItems=\"center\"\r\n        >\r\n          <Button variant=\"outlined\" onClick={reset}>\r\n            Cancel\r\n          </Button>\r\n          <Button variant=\"outlined\" color=\"primary\" onClick={handleSubmit}>\r\n            Save\r\n          </Button>\r\n          {isDeleteButtonShown && (\r\n            <Button variant=\"outlined\" color=\"secondary\" onClick={handleDelete}>\r\n              Delete\r\n            </Button>\r\n          )}\r\n        </Grid>\r\n      </Grid>\r\n    </form>\r\n  </Container>\r\n)\r\n\r\nPasswordCreateEditForm.defaultProps = {\r\n  isDeleteButtonShown: false,\r\n  handleDelete: () => 0,\r\n}\r\n\r\nPasswordCreateEditForm.propTypes = {\r\n  form: PropTypes.string.isRequired, // eslint-disable-line\r\n  initialValues: PropTypes.shape(), // eslint-disable-line\r\n  caption: PropTypes.string.isRequired,\r\n  onSubmit: PropTypes.func.isRequired, // eslint-disable-line\r\n  goBack: PropTypes.func.isRequired,\r\n  isDeleteButtonShown: PROP_TYPES.bool,\r\n  handleDelete: PROP_TYPES.func,\r\n  handleSubmit: PropTypes.func.isRequired,\r\n  reset: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default reduxForm({\r\n  validate: createJoiValidator(validationSchema),\r\n})(PasswordCreateEditForm)\r\n","export default {\r\n  passwords: {\r\n    items: [],\r\n    current: {},\r\n  },\r\n}\r\n","import uuidv1 from 'uuid/v1'\r\nimport { handleActions, createAction } from 'redux-actions'\r\nimport initialState from '../initialState'\r\n\r\nconst namespace = 'PASSWORD'\r\n\r\nconst CREATE_PASSWORD = `CREATE_${namespace}`\r\nconst UPDATE_PASSWORD = `UPDATE_${namespace}`\r\nconst REMOVE_PASSWORD = `REMOVE_${namespace}`\r\n\r\nexport const createPassword = createAction(CREATE_PASSWORD)\r\nexport const updatePassword = createAction(UPDATE_PASSWORD)\r\nexport const removePassword = createAction(REMOVE_PASSWORD)\r\n\r\nexport default handleActions(\r\n  {\r\n    [createPassword]: (state, { payload }) => {\r\n      const { site, userName, password } = payload\r\n\r\n      const newItem = {\r\n        id: uuidv1(),\r\n        site,\r\n        userName,\r\n        password,\r\n      }\r\n\r\n      return {\r\n        ...state,\r\n        items: [newItem, ...state.items],\r\n      }\r\n    },\r\n    [updatePassword]: (\r\n      state,\r\n      { payload: { passwordId, ...passwordData } }\r\n    ) => ({\r\n      ...state,\r\n      items: state.items.updateById(passwordId, passwordData),\r\n    }),\r\n    [removePassword]: (state, { payload: passwordId }) => ({\r\n      ...state,\r\n      items: state.items.filterById(passwordId),\r\n    }),\r\n  },\r\n  initialState.passwords\r\n)\r\n","import passwordsReducer, * as passwords from './passwords'\r\n\r\nexport { passwords }\r\n\r\nexport default {\r\n  passwords: passwordsReducer,\r\n}\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { PasswordCreateEditForm } from '../containers'\r\nimport { passwords as passwordsModule } from '../redux/modules'\r\nimport { HOME_DASHBOARD_ROUTE } from '../constants/routes'\r\nimport PROP_TYPES from '../constants/propTypes'\r\n\r\nconst CreatePassword = ({ history, createPassword }) => {\r\n  const goBack = () => history.push(HOME_DASHBOARD_ROUTE)\r\n\r\n  const onSubmit = values => {\r\n    createPassword(values)\r\n\r\n    goBack()\r\n  }\r\n\r\n  return (\r\n    <PasswordCreateEditForm\r\n      form=\"passwordCreate\"\r\n      caption=\"Create password\"\r\n      onSubmit={onSubmit}\r\n      goBack={goBack}\r\n    />\r\n  )\r\n}\r\n\r\nCreatePassword.propTypes = {\r\n  history: PROP_TYPES.history.isRequired,\r\n  createPassword: PROP_TYPES.func.isRequired,\r\n}\r\n\r\nexport default connect(\r\n  null,\r\n  {\r\n    createPassword: passwordsModule.createPassword,\r\n  }\r\n)(CreatePassword)\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { PasswordCreateEditForm } from '../containers'\r\nimport { passwords as passwordsModule } from '../redux/modules'\r\nimport { HOME_DASHBOARD_ROUTE } from '../constants/routes'\r\nimport PROP_TYPES from '../constants/propTypes'\r\n\r\nconst EditPassword = ({\r\n  history,\r\n  match: {\r\n    params: { passwordId },\r\n  },\r\n  currentPasswordItem,\r\n  updatePassword,\r\n  removePassword,\r\n}) => {\r\n  const goBack = () => history.push(HOME_DASHBOARD_ROUTE)\r\n\r\n  const onSubmit = values => {\r\n    updatePassword({ passwordId, ...values })\r\n\r\n    goBack()\r\n  }\r\n\r\n  const handleDelete = () => {\r\n    removePassword(passwordId)\r\n\r\n    goBack()\r\n  }\r\n\r\n  return (\r\n    <PasswordCreateEditForm\r\n      form=\"passwordEdit\"\r\n      initialValues={currentPasswordItem}\r\n      caption=\"Edit password\"\r\n      onSubmit={onSubmit}\r\n      goBack={goBack}\r\n      isDeleteButtonShown\r\n      handleDelete={handleDelete}\r\n    />\r\n  )\r\n}\r\n\r\nEditPassword.defaultProps = {\r\n  currentPasswordItem: {},\r\n}\r\n\r\nEditPassword.propTypes = {\r\n  history: PROP_TYPES.history.isRequired,\r\n  match: PROP_TYPES.match.isRequired,\r\n  currentPasswordItem: PROP_TYPES.shape(),\r\n  updatePassword: PROP_TYPES.func.isRequired,\r\n  removePassword: PROP_TYPES.func.isRequired,\r\n}\r\n\r\nexport default connect(\r\n  (\r\n    { passwords },\r\n    {\r\n      match: {\r\n        params: { passwordId },\r\n      },\r\n    }\r\n  ) => ({\r\n    currentPasswordItem: passwords.items.findById(passwordId) || {},\r\n  }),\r\n  {\r\n    updatePassword: passwordsModule.updatePassword,\r\n    removePassword: passwordsModule.removePassword,\r\n  }\r\n)(EditPassword)\r\n","import React from 'react'\r\n\r\nconst Settings = () => <div>Settings will be here</div>\r\n\r\nexport default Settings\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst Container = styled.div`\r\n  margin: 0 auto;\r\n  padding: 100px;\r\n  font-size: 32px;\r\n  width: 600px;\r\n`\r\n\r\nconst NoMatch = () => (\r\n  <Container>\r\n    <p>No match</p>\r\n    <Link to=\"/\">\r\n      <button type=\"button\">Go to main page</button>\r\n    </Link>\r\n  </Container>\r\n)\r\n\r\nexport default NoMatch\r\n","import { reducer as formReducer } from 'redux-form'\r\nimport reducers from './modules'\r\n\r\nexport default {\r\n  form: formReducer,\r\n  ...reducers,\r\n}\r\n","import { configureStore } from 'redux-starter-kit'\r\nimport persistState from 'redux-localstorage'\r\nimport rootReducer from './reducers'\r\nimport initialState from './initialState'\r\n\r\nexport default configureStore({\r\n  reducer: rootReducer,\r\n  devTools: process.env.NODE_ENV !== 'production',\r\n  preloadedState: initialState,\r\n  enhancers: [persistState(['passwords'])],\r\n})\r\n","import React from 'react'\r\nimport { Provider } from 'react-redux'\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\r\nimport {\r\n  HomeDashboard,\r\n  CreatePassword,\r\n  EditPassword,\r\n  Settings,\r\n  NoMatch,\r\n} from './routes'\r\nimport { ErrorBoundary, Layout } from './containers'\r\nimport store from './redux/store'\r\nimport {\r\n  HOME_DASHBOARD_ROUTE,\r\n  CREATE_PASSWORD_ROUTE,\r\n  EDIT_PASSWORD_ROUTE,\r\n  SETTINGS_ROUTE,\r\n} from './constants/routes'\r\n\r\nconst App = () => (\r\n  <Provider store={store}>\r\n    <ErrorBoundary>\r\n      <Router basename=\"/passwords-manager\">\r\n        <Layout>\r\n          <Switch>\r\n            <Route\r\n              exact\r\n              path={HOME_DASHBOARD_ROUTE}\r\n              component={HomeDashboard}\r\n            />\r\n            <Route\r\n              exact\r\n              path={CREATE_PASSWORD_ROUTE}\r\n              component={CreatePassword}\r\n            />\r\n            <Route path={EDIT_PASSWORD_ROUTE} component={EditPassword} />\r\n            <Route path={SETTINGS_ROUTE} component={Settings} />\r\n            <Route component={NoMatch} />\r\n          </Switch>\r\n        </Layout>\r\n      </Router>\r\n    </ErrorBoundary>\r\n  </Provider>\r\n)\r\n\r\nexport default App\r\n","/* eslint-disable */\r\nArray.prototype.updateById = function(id, data) {\r\n  if (typeof data === 'object') {\r\n    return this.map(item => (item.id === id ? { ...item, ...data } : item))\r\n  }\r\n\r\n  return this.map(item => (item.id === id ? data : item))\r\n}\r\n\r\nArray.prototype.findById = function(id) {\r\n  return this.find(item => item.id === id)\r\n}\r\n\r\nArray.prototype.filterById = function(id) {\r\n  return this.filter(item => item.id !== id)\r\n}\r\n\r\nString.prototype.populateURLParams = function(params) {\r\n  let newString = this\r\n\r\n  Object.entries(params).forEach(([key, value]) => {\r\n    newString = newString.replace(`:${key}`, value)\r\n  })\r\n\r\n  return newString\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport * as serviceWorker from './serviceWorker'\r\nimport App from './App'\r\nimport './utils'\r\nimport './index.css'\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n"],"sourceRoot":""}